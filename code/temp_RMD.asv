
% loop through subjects
for iSub = 1:length(subs)

    if subs(iSub) < 10
        subID = ['sub-00', num2str(subs(iSub))];
    elseif subs(iSub) < 100
        subID = ['sub-0', num2str(subs(iSub))];
    end

    % progress report
    disp(['Starting spm RDM for subject ',  num2str(subs(iSub)), ' on ',...
        map, '-map']);


    for j=1:nmasks

        mask_label=rois{j};
        mask_fn=fullfile(pwd, '..', 'MNI_ROIs', [char(mask_label)]);
        mask_label_short = split(mask_label, '.');
        mask_label_short = mask_label_short{1};


        disp(['Using mask ',  mask_label]);
        disp(char(datetime))

        if strcmp(map, 't')

            % Loop over runs to load data
            counter = 0;
            con_dir = fullfile(pwd, '..', 'derivatives', subID, 'exp_glm1_norm_220_with_targets/');

            for trial = 1:nTrials
                counter = counter + 1;

                % Load the contrast image for this run and trial
                con_file = fullfile(con_dir, sprintf('con_%04d.nii',trial));

                % Convert to CoSMoMVPA dataset
                ds = cosmo_fmri_dataset(con_file, ...
                    'mask', mask_fn, ... % Set brain mask
                    'targets', trial, ... % Set condition labels (1 = bathroom)
                    'chunks', run);     % Set run identifiers

                % Store dataset
                datasets{counter} = ds;
            end

            % Combine all runs into a single dataset
            ds_per_run = cosmo_stack(datasets);

            % remove constant features
            ds_per_run = cosmo_remove_useless_data(ds_per_run);

            %% Make RDM

            % corrleate t maps
            rdm_corr = corr(ds_per_run.samples', 'type', 'Spearman');
            figure; imagesc(rdm_corr, [-1,1]); colorbar

            % Save the RDM
            mask_label_short = current_split(mask_label, '.');
            mask_label_short = mask_label_short{1};
            subID2 = strrep(subID, '-', '');

            % get within and between category correlation
            withinCate = [squareform(rdm(1:nTrial/2, 1:nTrial/2)),...
                squareform(rdm(nTrial/2 + 1:end, nTrial/2 + 1:end))];
            betweenCate = reshape(rdm(nTrial/2 + 1:end, 1:nTrial/2), 1, []);

            % store in structure
            res.(subID2).(mask_label_short).rdm_corr = rdm_corr;
            res.(subID2).(mask_label_short).mean_cor = mean(squareform(rdm_corr));
            res.(subID2).(mask_label_short).corr_cate_diff =  mean(withinCate) - mean(betweenCate);

        elseif strcmp(map, 'b')

            % get path
            betaPath = fullfile(pwd, '..', 'derivatives', subID, 'GLMsingleEstimates', ...
                'GLMsingle_betas_mean.nii');

            % load beta map
            ds_per_run = cosmo_fmri_dataset(betaPath, ...
                'mask', mask_fn); % Set brain mask

            % add chunks and targets
            load(fullfile(pwd, '..', 'derivatives', subID, 'GLMsingleEstimates', ...
                'trialIDs.mat'));
            ds_per_run.sa.targets = trialIDs(:, 1);
            ds_per_run.sa.chunks = trialIDs(:, 2);

            % remove living room trials trials (target > 100)
            ds_per_run = cosmo_slice(ds_per_run, (ds_per_run.sa.targets <= 100), 1);

            % remove constant features
            ds=cosmo_remove_useless_data(ds_per_run);

            %% Get mean betas of glm single e

            meanBeta = [];
for s1 = 1:nTrials
    disp(num2str(s1))

    % Subset data for the two stimuli
    ds_stim = cosmo_slice(ds_per_run, ds_per_run.sa.targets == s1);

    % take mean
    meanBeta(:, s1) = mean(ds_stim.samples)';

end
rdm = corr(meanBeta, 'type', 'Spearman');
figure; imagesc(rdm, [-1, 1]); colorbar

        else
            error('map not defined')
        end



        % save data set
        save(fullfile(pwd, '..', 'derivatives', subID,...
            ['cosmo_dataset_', mask_label_short, '_', map, '_map_hpf_128.mat']), 'ds')

        
    end
end
%% ----------------------------------------------------

% Initialize dataset cell array
datasets = cell(numel(nRuns), 1);

% Loop over runs to load data
counter = 0;
con_dir = fullfile(pwd, '..', 'derivatives', subID, 'exp_glm1_norm_220_with_targets/');

for trial = 1:nTrials
    counter = counter + 1;

    % Load the contrast image for this run and trial
    con_file = fullfile(con_dir, sprintf('con_%04d.nii',trial));

    % Convert to CoSMoMVPA dataset
    ds = cosmo_fmri_dataset(con_file, ...
        'mask', mask_fn, ... % Set brain mask
        'targets', trial, ... % Set condition labels (1 = bathroom)
        'chunks', run);     % Set run identifiers

    % Store dataset
    datasets{counter} = ds;
end

% Combine all runs into a single dataset
ds_per_run = cosmo_stack(datasets);

% remove constant features
ds_per_run = cosmo_remove_useless_data(ds_per_run);





%%

% remove living room trials trials (target > 100)
ds_per_run = cosmo_slice(ds_per_run, (ds_per_run.sa.targets <= 100), 1);

% remove constant features
ds_per_run =cosmo_remove_useless_data(ds_per_run);

